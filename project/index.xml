<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Coding Cloud</title>
    <link>https://rawsanj.dev/project/</link>
    <description>Recent content in Projects on Coding Cloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2020. Sanjay Rawat</copyright>
    <lastBuildDate>Sat, 04 May 2019 23:19:33 +0530</lastBuildDate>
    
	<atom:link href="https://rawsanj.dev/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aws Lambda Filter Chain</title>
      <link>https://rawsanj.dev/project/aws-lambda-filter-chain/</link>
      <pubDate>Sat, 04 May 2019 23:19:33 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/aws-lambda-filter-chain/</guid>
      <description>AWS Lambda Filter Chain provides a way to add filters similar to javax.servlet.Filter to the AWS Lambda Functions handling requests from API Gateway</description>
    </item>
    
    <item>
      <title>Spring Redis Websocket</title>
      <link>https://rawsanj.dev/project/spring-redis-websocket/</link>
      <pubDate>Mon, 18 Mar 2019 01:09:30 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/spring-redis-websocket/</guid>
      <description>Multi-instance WebSocket messaging Chat App demo using Spring Boot and Redis Pub/Sub</description>
    </item>
    
    <item>
      <title>Spring Cloud Task as K8s Cronjob</title>
      <link>https://rawsanj.dev/project/spring-cloud-task-as-k8s-cronjob/</link>
      <pubDate>Mon, 17 Sep 2018 01:06:28 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/spring-cloud-task-as-k8s-cronjob/</guid>
      <description>Spring Cloud Task Application running as CronJob in Kubernetes - Cron UI: &lt;a href=&#34;https://github.com/RawSanj/spring-cronjob-currency&#34; target=&#34;_blank&#34;&gt;spring-cronjob-currency&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>Aws Service Broker</title>
      <link>https://rawsanj.dev/project/aws-service-broker/</link>
      <pubDate>Sun, 03 Jun 2018 00:04:34 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/aws-service-broker/</guid>
      <description>AWS Open Service Broker - Offering RDS and S3 Service</description>
    </item>
    
    <item>
      <title>Aws S3 File System</title>
      <link>https://rawsanj.dev/project/aws-s3-file-system/</link>
      <pubDate>Sun, 29 Apr 2018 00:49:02 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/aws-s3-file-system/</guid>
      <description>AWS S3 File System Application</description>
    </item>
    
    <item>
      <title>Boot Kubeless</title>
      <link>https://rawsanj.dev/project/boot-kubeless/</link>
      <pubDate>Sat, 03 Feb 2018 00:24:05 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/boot-kubeless/</guid>
      <description>Spring Boot project for Custom Kubeless Runtime</description>
    </item>
    
    <item>
      <title>Spring Twitter Stream</title>
      <link>https://rawsanj.dev/project/spring-twitter-stream/</link>
      <pubDate>Wed, 03 Jan 2018 23:51:52 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/spring-twitter-stream/</guid>
      <description>Spring Boot - Spring Social - Twitter Stream with Word Cloud and Tweet Search</description>
    </item>
    
    <item>
      <title>Java Mail Clients</title>
      <link>https://rawsanj.dev/project/java-mail-clients/</link>
      <pubDate>Thu, 19 Oct 2017 00:19:22 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/java-mail-clients/</guid>
      <description>Send Java Email from GMail, Outlook, Yahoo and Zoho. Demo App to test jHipster tip for Email</description>
    </item>
    
    <item>
      <title>Spring Rest Batch</title>
      <link>https://rawsanj.dev/project/spring-rest-batch/</link>
      <pubDate>Thu, 08 Dec 2016 00:43:11 +0530</pubDate>
      
      <guid>https://rawsanj.dev/project/spring-rest-batch/</guid>
      <description>Spring Boot-Batch project to read Movies from &lt;a href=&#34;https://developers.themoviedb.org/3&#34; target=&#34;_blank&#34;&gt;TheMovieDB&lt;/a&gt; REST API and store into database.</description>
    </item>
    
  </channel>
</rss>